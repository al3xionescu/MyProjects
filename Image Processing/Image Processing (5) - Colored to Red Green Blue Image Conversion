/*
We will convert a colored image to an image with either red effect, green effect or blue effect 
Algorithm for converting an colored image to red colored:
1. Get the RGB value of the pixel.
2. Set the RGB values as follows:
   R: NO CHANGE
   G: Set to 0
   B: Set to 0
3. Replace the R, G and B value of the pixel with the values calculated in step 2.
4. Repeat Step 1 to Step 3 for each pixels of the image.
*/

import java.io.File;
import java.io.IOException;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
 
public class RedImage
{
    public static void main(String args[])throws IOException
    {
        BufferedImage img = null;
        File f = null;
 
        // read image
        try
        {
            f = new File("G:\\Inp.jpg");
            img = ImageIO.read(f);
        }
        catch(IOException e)
        {
            System.out.println(e);
        }
 
        // get width and height
        int width = img.getWidth();
        int height = img.getHeight();
 
        // convert to red image
        for (int y = 0; y < height; y++)
        {
            for (int x = 0; x < width; x++)
            {
                int p = img.getRGB(x,y);
 
                int a = (p>>24)&0xff;
                int r = (p>>16)&0xff;
 
                // set new RGB
                // keeping the r value same as in original
                // image and setting g and b as 0.
                p = (a<<24) | (r<<16) | (0<<8) | 0;
 
                img.setRGB(x, y, p);
            }
        }
 
        // write image
        try
        {
            f = new File("G:\\Out.jpg");
            ImageIO.write(img, "jpg", f);
        }
        catch(IOException e)
        {
            System.out.println(e);
        }
    }
}
